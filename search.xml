<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修改WSL的安装位置</title>
      <link href="/2022/09/24/%E4%BF%AE%E6%94%B9WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/"/>
      <url>/2022/09/24/%E4%BF%AE%E6%94%B9WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><ol><li><p>点此下载离线 wsl 包 <a href="https://learn.microsoft.com/zh-cn/windows/wsl/install-manual">https://learn.microsoft.com/zh-cn/windows/wsl/install-manual</a></p></li><li><p>将下载的文件加上 .zip 后缀，对齐进行解压。</p></li></ol><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/v2-f11fb313526d10b6bd8bb9cac4a3c169_720w.jpg" alt="img"></p><ol start="3"><li><p>把它的后缀改为<code>.zip</code>，然后解压到想要安装WSL的目录下。</p></li><li><p>点击 ubuntu.exe，等待一段时间就成功安装到当前目录。</p></li><li><p>需要注意的是安装目录的磁盘不能开<strong>压缩内容以便节省磁盘空间</strong>选项，否则会报错 0xc03a001a, 可以右键【文件夹–&gt;属性–&gt;常规–&gt;高级】找到并关闭这个选项。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/v2-fe9ffaab2787cb9c1564f5ee723e5f08_720w.jpg" alt="img"></p></li><li><p>要卸载的话使用命令 wsl –unregister &lt;要卸载的发行版&gt;，之后删除文件夹即可。</p></li><li><p>可以使用 wsl –list –verbose 查看安装的 wsl</p></li><li><p>使用 wsl –shutdown 关闭所有的 wsl</p></li><li><p>wsl -t Ubuntu-20.04 关闭指定的 wsl</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改WSL启动时的默认账户</title>
      <link href="/2022/09/24/%E4%BF%AE%E6%94%B9WSL%E5%90%AF%E5%8A%A8%E6%97%B6%E7%9A%84%E9%BB%98%E8%AE%A4%E8%B4%A6%E6%88%B7/"/>
      <url>/2022/09/24/%E4%BF%AE%E6%94%B9WSL%E5%90%AF%E5%8A%A8%E6%97%B6%E7%9A%84%E9%BB%98%E8%AE%A4%E8%B4%A6%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd --create-home --shell /bin/bash xqyjlj</span><br><span class="line">passwd xqyjlj</span><br><span class="line">usermod -aG sudo xqyjlj</span><br><span class="line">vim /etc/wsl.conf</span><br></pre></td></tr></table></figure><p>添加以下代码</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[user]</span></span><br><span class="line"><span class="attr">default</span>=xqyjlj</span><br></pre></td></tr></table></figure><p>重启 wsl 即可</p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSL </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过VSCode远程调试RISC-V（基于平头哥C906）</title>
      <link href="/2022/09/17/%E9%80%9A%E8%BF%87VSCode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95RISC-V%EF%BC%88%E5%9F%BA%E4%BA%8E%E5%B9%B3%E5%A4%B4%E5%93%A5C906%EF%BC%89/"/>
      <url>/2022/09/17/%E9%80%9A%E8%BF%87VSCode%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95RISC-V%EF%BC%88%E5%9F%BA%E4%BA%8E%E5%B9%B3%E5%A4%B4%E5%93%A5C906%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近从一个老司机那里搞来一块<a href="https://occ.t-head.cn/vendor/detail/index?id=4030046623349878784">Lichee D1 Dock Pro</a>开发板，由于其板载 jtag 功能，加上现在深圳动不动就封个几天，因此，想尝试一下远程对RISC-V CPU Debug 的可行性。</p><p>废话不多说，直接上干货！</p><h2 id="DebugServer安装"><a href="#DebugServer安装" class="headerlink" title="DebugServer安装"></a>DebugServer安装</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -s https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1657868508115/T-Head-DebugServer-linux-x86_64-V5.16.2-20220708.sh.tar.gz | tar xzf -</span><br><span class="line">sudo chmod 777 ./T-Head-DebugServer-linux-x86_64-V5.16.2-20220708.sh -R</span><br><span class="line">sudo ./T-Head-DebugServer-linux-x86_64-V5.16.2-20220708.sh -i</span><br><span class="line">DebugServerConsole -setclk 8 -port 1025</span><br></pre></td></tr></table></figure><p>如果出现以下日志，则说明已经安装成功了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+---                                                    ---+</span><br><span class="line">|  T-Head Debugger Server (Build: Jul  8 2022)             |</span><br><span class="line">   User   Layer Version : 5.16.02</span><br><span class="line">   Target Layer version : 2.0</span><br><span class="line">|  Copyright (C) 2022 T-HEAD Semiconductor Co.,Ltd.        |</span><br><span class="line">+---                                                    ---+</span><br><span class="line">T-HEAD: CKLink_Lite_V2, App_ver unknown, Bit_ver null, Clock 2526.316KHz,</span><br><span class="line">       5-wire, With DDC, Cache Flush On, SN CKLink_Lite_Vendor-rog 199C8A.</span><br><span class="line">+--  Debug Arch is CKHAD.  --+</span><br><span class="line">+--  CPU 0  --+</span><br><span class="line">T-HEAD Xuan Tie CPU Info:</span><br><span class="line">        WORD[0]: 0x0910090d</span><br><span class="line">        WORD[1]: 0x11002000</span><br><span class="line">        WORD[2]: 0x260c0001</span><br><span class="line">        WORD[3]: 0x30030066</span><br><span class="line">        WORD[4]: 0x42180000</span><br><span class="line">        WORD[5]: 0x50000000</span><br><span class="line">        WORD[6]: 0x60000853</span><br><span class="line">        MISA   : 0x8000000000b4112d</span><br><span class="line">Target Chip Info:</span><br><span class="line">        CPU Type is C906FDV, Endian=Little, Vlen=128, Version is R1S0P2.</span><br><span class="line">        DCache size is 32K, 4-Way Set Associative, Line Size is 64Bytes, with no ECC.</span><br><span class="line">        ICache size is 32K, 2-Way Set Associative, Line Size is 64Bytes, with no ECC.</span><br><span class="line">        Target is 1 core.</span><br><span class="line">        MMU has 256 JTLB items.</span><br><span class="line">        PMP zone num is 8.</span><br><span class="line">        HWBKPT number is 2, HWWP number is 2.</span><br><span class="line">        MISA: (RV64IMAFDCVX, Imp M-mode, S-mode, U-mode)</span><br><span class="line"></span><br><span class="line">GDB connection command for CPUs(CPU0):</span><br><span class="line">        target remote 127.0.0.1:1025</span><br><span class="line">        target remote 192.168.64.128:1025</span><br><span class="line">        target remote 172.17.0.1:1025</span><br><span class="line"></span><br><span class="line">****************  DebuggerServer Commands List **************</span><br><span class="line">help/h</span><br><span class="line">        Show help informations.</span><br><span class="line">*************************************************************</span><br></pre></td></tr></table></figure><p>如果出现以下日志，插拔几次，复位板子多试试。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">+---                                                    ---+</span><br><span class="line">|  T-Head Debugger Server (Build: Jul  8 2022)             |</span><br><span class="line">   User   Layer Version : 5.16.02 </span><br><span class="line">   Target Layer version : 2.0</span><br><span class="line">|  Copyright (C) 2022 T-HEAD Semiconductor Co.,Ltd.        |</span><br><span class="line">+---                                                    ---+</span><br><span class="line">ERROR: Fail to write to CKLINK.</span><br><span class="line">ERROR: Fail to write to CKLINK.</span><br><span class="line">ERROR: Fail to write to CKLINK.</span><br></pre></td></tr></table></figure><h2 id="工具链安装"><a href="#工具链安装" class="headerlink" title="工具链安装"></a>工具链安装</h2><p>我这里直接用柿饼 M7 的开发环境，柿饼 M7 的开发环境可以参考<a href="https://xqyjlj.github.io/2022/09/11/Persim-M7%20Ubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Docker)">Persim-M7 Ubuntu环境搭建(Docker)</a>：</p><p>执行以下命令，看看 gdb 是否能够正常运行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin/riscv64-unknown-elf-gdb -v</span><br></pre></td></tr></table></figure><p>我的环境是 ubuntu 20.04，他报了依赖错误，其他平台需要自己解决错误：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin/riscv64-unknown-elf-gdb: error while loading shared libraries: libncursesw.so.5: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>创建个链接就解决了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ln -s /lib/x86_64-linux-gnu/libncursesw.so.6 /lib/x86_64-linux-gnu/libncursesw.so.5</span><br></pre></td></tr></table></figure><h2 id="VSCode远程开发"><a href="#VSCode远程开发" class="headerlink" title="VSCode远程开发"></a>VSCode远程开发</h2><p>通过VSCode远程到ubuntu中这里可以参考<a href="https://xqyjlj.github.io/2022/09/11/Window%20SSH%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">Window SSH 远程开发环境搭建</a>，将设为debug模式</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917152619029.png" alt="image-20220917152619029"></p><p>按下快捷键【 <strong>Ctrl+Shift+&#96;</strong> 】新建一个终端，执行命令【 <strong>get_persim_m7</strong> 】获取 m7 的开发环境变量</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917153316448.png" alt="image-20220917153316448"></p><p>随后执行【 scons –target&#x3D;vsc 】，创建 VSCode 配置文件</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917153606528.png" alt="image-20220917153606528"></p><p>创建 launch.json 文件</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;riscv-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin/riscv64-unknown-elf-gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/rtthread.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为 gdb 启用整齐打印&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target remote localhost:1025&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore $&#123;workspaceFolder&#125;/rtthread.elf&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;set $pc=0x41000000&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launchCompleteCommand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>其中启动方式为附着方式，即芯片原有程序依然在 Flash 运行，并开启了 JTAG 与 初始化了 DDR，加载 elf 文件后手动调整 PC 指针至 0x41000000 启动</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917154342507.png" alt="image-20220917154342507"></p><h2 id="开始调试"><a href="#开始调试" class="headerlink" title="开始调试"></a>开始调试</h2><p>在终端中执行命令【 DebugServerConsole -setclk 8 -port 1025 】启动 DebugServer</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917154727942.png" alt="image-20220917154727942"></p><p>点击随便下几个断点，并进入调试模式观察</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917154914791.png" alt="image-20220917154914791"></p><p>可以看到，已经可以正常调试了（全部都是远程哦）</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917155143020.png" alt="image-20220917155143020"></p><h2 id="裸机调试"><a href="#裸机调试" class="headerlink" title="裸机调试"></a>裸机调试</h2><p>裸机开发需要开启 jtag，并初始化 ddr，</p><p>我们可以借助 xfel 工具执行以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xfel version</span><br><span class="line">xfel jtag</span><br><span class="line">xfel ddr</span><br></pre></td></tr></table></figure><p>此后再进行调试即可。</p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> 柿饼 </tag>
            
            <tag> Persim </tag>
            
            <tag> Linux </tag>
            
            <tag> 远程开发 </tag>
            
            <tag> RISC-V </tag>
            
            <tag> 平头哥C906 </tag>
            
            <tag> 全志D1 </tag>
            
            <tag> 全志F133 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window SSH 远程开发环境搭建</title>
      <link href="/2022/09/11/Window%20SSH%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/09/11/Window%20SSH%20%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="Ubuntu-设置"><a href="#Ubuntu-设置" class="headerlink" title="Ubuntu 设置"></a>Ubuntu 设置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br><span class="line">sudo service ssh start</span><br><span class="line">sudo ps -e |grep ssh</span><br><span class="line">sudo ifconfig</span><br><span class="line">sudo apt-get install samba samba-common</span><br><span class="line">sudo smbpasswd -a xqyjlj #此处用户名必须存在</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">等待设置密码</span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在配置文件中找到usershare allow guests = <span class="built_in">yes</span>，在后面一行添加 usershare owner only = <span class="literal">false</span></span></span><br><span class="line">sudo chmod 777 /home/ -R</span><br></pre></td></tr></table></figure><p>添加共享文件夹，为了方便，我这里直接共享 home</p><p>   <img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911133530992.png" alt="image-20220911133530992"></p><h2 id="Windows-设置"><a href="#Windows-设置" class="headerlink" title="Windows 设置"></a>Windows 设置</h2><ol><li><p>打开映射网络驱动器</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911133651408.png" alt="image-20220911133651408"></p></li><li><p>输入 Ubuntu 的 IP</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911133753309.png" alt="image-20220911133753309"></p></li><li><p>映射完成后的效果</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911133814999.png" alt="image-20220911133814999"></p></li></ol><h2 id="SSH推荐"><a href="#SSH推荐" class="headerlink" title="SSH推荐"></a>SSH推荐</h2><h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><ol><li><p>首先安装 Remote - SSH 插件</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911134920019.png" alt="image-20220911134920019"></p></li><li><p>点击左下角的远程窗口，选择 Connect to Host</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911135134685.png" alt="image-20220911135134685"></p></li><li><p>按照提示完成操作即可享受远程开发</p></li><li><p>效果图</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911135546681.png" alt="image-20220911135546681"></p></li></ol><h3 id="Jetbrains"><a href="#Jetbrains" class="headerlink" title="Jetbrains"></a>Jetbrains</h3><p>使用此远程开发，按照提示一路操作即可</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220911135727217.png" alt="image-20220911135727217"></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> persim </tag>
            
            <tag> 柿饼 </tag>
            
            <tag> 搭建环境 - 远程开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Persim-M7 Ubuntu环境搭建(Docker)</title>
      <link href="/2022/09/11/Persim-M7%20Ubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Docker)/"/>
      <url>/2022/09/11/Persim-M7%20Ubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Docker)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>首先进行换源和docker安装，深圳这边华为云比较快，其他地区可以用阿里云</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo sed -i <span class="string">&#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo sed -i <span class="string">&#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line">sudo sed -i &#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27; /etc/apt/sources.list</span><br><span class="line">sudo sed -i &#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27; /etc/apt/sources.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line">sudo docker pull ubuntu:20.04</span><br><span class="line">sudo docker run --name persim-m7 -itd ubuntu:20.04</span><br><span class="line">sudo docker exec -it persim-m7 /bin/bash</span><br></pre></td></tr></table></figure><p>在 docker 的 shell 中，执行以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed -i &#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line">sed -i <span class="string">&#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install sudo apt-utils vim net-tools inetutils-ping wget curl tree lbzip2 bzip2 git xz-utils python3 python2 python3-pip scons telnet openssl libssl-dev</span><br><span class="line">apt-get install -qq libncurses5-dev lib32z1 &gt; /dev/null</span><br><span class="line">apt-get install u-boot-tools zlib1g-dev dosfstools mtools </span><br><span class="line">curl -s https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1652757104469/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6-20220516.tar.gz | tar xzf - -C /opt</span><br><span class="line">vim /root/.bashrc</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> get_persim_m7=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    export RTT_CC=gcc</span></span><br><span class="line"><span class="string">    export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin</span></span><br><span class="line"><span class="string">    export RTT_CC_PREFIX=riscv64-unknown-elf-</span></span><br><span class="line"><span class="string">    $RTT_EXEC_PATH/riscv64-unknown-elf-gcc --version</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /root/.bash_profile</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -f .bashrc ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">source</span> .bashrc </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>以后只需执行 get_persim_m7 命令，即可获取环境变量，随后便可实现编译</p><p>配合 DockerFile 食用更佳，构建命令： <code>docker build -f ./dockerfile -t persim-m7:0.0 .</code></p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">set</span> -x</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line"><span class="comment"># RUN sed -i &#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># RUN sed -i &#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get upgrade -y</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y sudo apt-utils vim net-tools inetutils-ping wget curl tree lbzip2 bzip2 git xz-utils python3 python2 python3-pip scons telnet openssl libssl-dev</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> DEBIAN_FRONTEND=<span class="string">&quot;noninteractive&quot;</span> apt -y install tzdata</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> TZ=Asia/Shanghai &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -qq libncurses5-dev lib32z1 &gt; /dev/null</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y u-boot-tools zlib1g-dev dosfstools mtools </span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -s https://occ-oss-prod.oss-cn-hangzhou.aliyuncs.com/resource//1652757104469/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6-20220516.tar.gz | tar xzf - -C /opt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot; alias get_persim_m7=&#x27;\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_CC=gcc\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_CC_PREFIX=riscv64-unknown-elf-\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     \$RTT_EXEC_PATH/riscv64-unknown-elf-gcc --version\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;&#x27;\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;if test -f .bashrc ; then\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;    source .bashrc\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;fi\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt clean</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> /var/lib/apt/lists/partial</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cat</span> /etc/issue</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> python3 -V</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> scons --version</span></span><br></pre></td></tr></table></figure><h2 id="VSCode配置文件"><a href="#VSCode配置文件" class="headerlink" title="VSCode配置文件"></a>VSCode配置文件</h2><p>launch.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;riscv-debug-bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin/riscv64-unknown-elf-gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/software/bootloader/f133/rtthread.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为 gdb 启用整齐打印&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target remote localhost:1025&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore $&#123;workspaceRoot&#125;/software/bootloader/f133/rtthread.elf&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;set $pc=0x41000000&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launchCompleteCommand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;riscv-debug-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin/riscv64-unknown-elf-gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/software/firmware/f133/rtthread.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为 gdb 启用整齐打印&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target remote localhost:1025&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore $&#123;workspaceRoot&#125;/software/firmware/f133/rtthread.elf&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;set $pc=0x40000000&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launchCompleteCommand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>tasks.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// See https://go.microsoft.com/fwlink/?LinkId=733558</span></span><br><span class="line">    <span class="comment">// for the documentation about the tasks.json format</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC_PREFIX=riscv64-unknown-elf-;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/bootloader/f133;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -j8;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean_bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC_PREFIX=riscv64-unknown-elf-;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/bootloader/f133;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -c;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC_PREFIX=riscv64-unknown-elf-;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/firmware/f133;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -j8;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean_app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/Xuantie-900-gcc-elf-newlib-x86_64-V2.2.6/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC_PREFIX=riscv64-unknown-elf-;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/firmware/f133;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -c;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用 VSCode 一键编译</p><p>在SDK的根目录打开 VSCode，按下 F1，选择 Run Tasks，选择 build_app，即可编译。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917192215890.png" alt="image-20220917192215890"></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917192248446.png" alt="image-20220917192248446"></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> persim </tag>
            
            <tag> 柿饼 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Persim-M3 Ubuntu环境搭建(Docker)</title>
      <link href="/2022/09/10/Persim-M3%20Ubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Docker)/"/>
      <url>/2022/09/10/Persim-M3%20Ubuntu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA(Docker)/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>首先进行换源和docker安装，深圳这边华为云比较快，其他地区可以用阿里云</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo sed -i <span class="string">&#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sudo sed -i <span class="string">&#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line">sudo sed -i &#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27; /etc/apt/sources.list</span><br><span class="line">sudo sed -i &#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27; /etc/apt/sources.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line">sudo docker pull ubuntu:20.04</span><br><span class="line">sudo docker run --name persim-m3 -itd ubuntu:20.04</span><br><span class="line">sudo docker exec -it persim-m3 /bin/bash</span><br></pre></td></tr></table></figure><p>在 docker 的 shell 中，执行以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed -i &#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># sed -i &#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line">sed -i <span class="string">&#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">sed -i <span class="string">&#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install sudo apt-utils vim net-tools inetutils-ping wget curl tree lbzip2 bzip2 git xz-utils python3 python2 python3-pip scons telnet</span><br><span class="line">apt-get install -qq libncurses5-dev lib32z1 &gt; /dev/null</span><br><span class="line">apt-get install u-boot-tools zlib1g-dev dosfstools mtools </span><br><span class="line">curl -s https://armkeil.blob.core.windows.net/developer//sitecore/shell/-/media/Files/downloads/gnu-rm/5_4-2016q3/gcc-arm-none-eabi-5_4-2016q3-20160926-linux,-d-,tar.bz2 | tar xjf - -C /opt</span><br><span class="line">curl -s https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 | tar xjf - -C /opt</span><br><span class="line">vim /root/.bashrc</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">alias</span> get_persim_m3=<span class="string">&#x27;</span></span><br><span class="line"><span class="string">    export RTT_ROOT=`pwd`/../rt-thread</span></span><br><span class="line"><span class="string">    export RTT_CC=gcc</span></span><br><span class="line"><span class="string">    export RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-5_4-2016q3/bin</span></span><br><span class="line"><span class="string">    $RTT_EXEC_PATH/arm-none-eabi-gcc --version</span></span><br><span class="line"><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /root/.bash_profile</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -f .bashrc ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">source</span> .bashrc </span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>以后只需在文件的 scons 路径下执行 get_persim_m3 命令，即可获取环境变量，随后便可实现编译</p><p>配合 DockerFile 食用更佳，构建命令： <code>docker build -f ./dockerfile -t persim-m3:0.0 .</code></p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">set</span> -x</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line"><span class="comment"># RUN sed -i &#x27;s/archive.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="comment"># RUN sed -i &#x27;s/security.ubuntu.com/mirrors.aliyun.com/g&#x27; /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/archive.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> sed -i <span class="string">&#x27;s/security.ubuntu.com/repo.huaweicloud.com/g&#x27;</span> /etc/apt/sources.list</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get upgrade -y</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y sudo apt-utils vim net-tools inetutils-ping wget curl tree lbzip2 bzip2 git xz-utils python3 python2 python3-pip scons telnet</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> DEBIAN_FRONTEND=<span class="string">&quot;noninteractive&quot;</span> apt -y install tzdata</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> TZ=Asia/Shanghai &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -qq libncurses5-dev lib32z1 &gt; /dev/null</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y u-boot-tools zlib1g-dev dosfstools mtools </span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -s https://armkeil.blob.core.windows.net/developer//sitecore/shell/-/media/Files/downloads/gnu-rm/5_4-2016q3/gcc-arm-none-eabi-5_4-2016q3-20160926-linux,-d-,tar.bz2 | tar xjf - -C /opt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> curl -s https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 | tar xjf - -C /opt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot; alias get_persim_m3=&#x27;\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_ROOT=`pwd`/../rt-thread\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_CC=gcc\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     export RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-5_4-2016q3/bin\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;     \$RTT_EXEC_PATH/arm-none-eabi-gcc --version\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;&#x27;\n&quot;</span> &gt;&gt; /root/.bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;if test -f .bashrc ; then\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;    source .bashrc\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">printf</span> <span class="string">&quot;fi\n&quot;</span> &gt;&gt; /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt clean</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">mkdir</span> /var/lib/apt/lists/partial</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">cat</span> /etc/issue</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> python3 -V</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> scons --version</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="VSCode配置文件"><a href="#VSCode配置文件" class="headerlink" title="VSCode配置文件"></a>VSCode配置文件</h2><p>launch.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arm-debug-bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/gcc-arm-none-eabi-10-2020-q4-major/bin/arm-none-eabi-gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/software/bootloader/rtthread.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为 gdb 启用整齐打印&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore $&#123;workspaceRoot&#125;/software/bootloader/rtthread.elf&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;set $pc=0x81B00000&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launchCompleteCommand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arm-debug-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;miDebuggerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/opt/gcc-arm-none-eabi-5_4-2016q3/bin/arm-none-eabi-gdb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/software/firmware/rtthread.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;setupCommands&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;为 gdb 启用整齐打印&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;-enable-pretty-printing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ignoreFailures&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;restore $&#123;workspaceRoot&#125;/software/firmware/rtthread.elf&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;set $pc=0x80000000&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;launchCompleteCommand&quot;</span><span class="punctuation">:</span> <span class="string">&quot;None&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>tasks.json</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// See https://go.microsoft.com/fwlink/?LinkId=733558</span></span><br><span class="line">    <span class="comment">// for the documentation about the tasks.json format</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_ROOT=`pwd`/software/rt-thread;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-10-2020-q4-major/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/bootloader;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -j8;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean_bootloader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_ROOT=`pwd`/software/rt-thread;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/gcc-arm-none-eabi-10-2020-q4-major/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/bootloader;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -c;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build_app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_ROOT=`pwd`/software/rt-thread;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-5_4-2016q3/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/firmware;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -j8;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean_app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;export RTT_ROOT=`pwd`/software/rt-thread;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_CC=gcc;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;export RTT_EXEC_PATH=/opt/gcc-arm-none-eabi-5_4-2016q3/bin;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;cd $&#123;workspaceFolder&#125;/software/firmware;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;scons -c;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>使用 VSCode 一键编译</p><p>在SDK的根目录打开 VSCode，按下 F1，选择 Run Tasks，选择 build_app，即可编译。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917192322748.png" alt="image-20220917192322748"></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220917192349139.png" alt="image-20220917192349139"></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> persim </tag>
            
            <tag> 柿饼 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP编译环境搭建</title>
      <link href="/2022/08/21/CSP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/08/21/CSP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><ol><li><p>下载安装 <a href="https://visualstudio.microsoft.com/zh-hans/vs/">Visual Studio 2022 Community</a></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821184828961.png" alt="image-20220821184828961"></p></li><li><p>打开后选择此项安装</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821185308486.png" alt="image-20220821185308486"></p></li><li><p>安装完毕之后，即可进行正常编译。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821185653176.png" alt="image-20220821185653176"></p></li><li><p>能够编译并不代表能够正常运行，软件运行需要数据库的支持，在app.xaml.cs中指定了debug下的数据库路径，即与csp同级路径下，数据库链接: <a href="https://github.com/xqyjlj/csp_mcu_db">csp_mcu_db</a></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821185931551.png" alt="image-20220821185931551"></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821190046606.png" alt="image-20220821190046606"></p></li><li><p>由此，软件便可正常运行。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821190417107.png" alt="image-20220821190417107"></p></li></ol><h2 id="可能碰到的错误"><a href="#可能碰到的错误" class="headerlink" title="可能碰到的错误"></a>可能碰到的错误</h2><ol><li><p>可查看nuget是否设置正确</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821191121598.png" alt="image-20220821191121598"></p></li><li><p>如果没有此项，请手动设置</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20220821191257245.png" alt="image-20220821191257245"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
          <category> CSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .net </tag>
            
            <tag> dotnet </tag>
            
            <tag> visual-studio </tag>
            
            <tag> 搭建环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP主页导航</title>
      <link href="/2022/08/20/CSP%E4%B8%BB%E9%A1%B5%E5%AF%BC%E8%88%AA/"/>
      <url>/2022/08/20/CSP%E4%B8%BB%E9%A1%B5%E5%AF%BC%E8%88%AA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="演示视频"><a href="#演示视频" class="headerlink" title="演示视频"></a>演示视频</h2> <div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"> <iframe src="//player.bilibili.com/player.html?aid=560829049&bvid=BV1Ke4y1b7PE&cid=838817398&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div> <h2 id="基础上手"><a href="#基础上手" class="headerlink" title="基础上手"></a>基础上手</h2><ol><li><a href="https://xqyjlj.github.io/2022/08/20/CSP%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/">CSP编译环境搭建</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> CSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32-Linux环境搭建</title>
      <link href="/2021/09/17/ESP32-Linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/09/17/ESP32-Linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc git wget make flex bison gperf python python-pip python-setuptools python-serial python-cryptography python-future python-pyparsing python-pyelftools libffi-dev libssl-dev</span><br><span class="line">mkdir -p ~/Tool/esp</span><br><span class="line">cd ~/Tool/esp</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-esp32-elf-gcc8_4_0-esp-2021r1-linux-amd64.tar.gz #64位</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-esp32-elf-gcc8_4_0-esp-2021r1-linux-i686.tar.gz #32位</span><br><span class="line">tar -xzf xtensa-esp32-elf-gcc8_4_0-esp-2021r1-linux-amd64.tar.gz #64位</span><br><span class="line">tar -xzf xtensa-esp32-elf-gcc8_4_0-esp-2021r1-linux-i686.tar.gz #32位</span><br><span class="line">git clone --recursive https://github.com/espressif/esp-idf.git</span><br><span class="line">sudo vim  ~/.bashrc</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias get_esp32=&#x27;</span><br><span class="line">export PATH=&quot;$HOME/Tool/esp/xtensa-esp32-elf/bin:$PATH&quot;</span><br><span class="line">export IDF_PATH=&quot;$HOME/Tool/esp/esp-idf&quot;</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">get_esp32</span><br><span class="line">sudo apt install python-pip</span><br><span class="line">python -m pip install --user -r $IDF_PATH/requirements.txt</span><br></pre></td></tr></table></figure><p>此后，只需执行以下命令便能加载其环境了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">get_esp32</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> esp32 </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> esp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266-Linux环境搭建</title>
      <link href="/2021/09/17/ESP8266-Linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/09/17/ESP8266-Linux%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="ESP8266-RTOS-SDK"><a href="#ESP8266-RTOS-SDK" class="headerlink" title="ESP8266_RTOS_SDK"></a>ESP8266_RTOS_SDK</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python python-serial</span><br><span class="line">mkdir -p ~/Tool/esp</span><br><span class="line">cd ~/Tool/esp</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz # 64位机</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-i686.tar.gz # 32位机</span><br><span class="line">tar -xzf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz # 64位机</span><br><span class="line">tar -xzf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-i686.tar.gz # 32位机</span><br><span class="line">git clone --recursive https://github.com/espressif/ESP8266_RTOS_SDK.git</span><br><span class="line">sudo vim  ~/.bashrc</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias get_esp8266_rtos=&#x27;</span><br><span class="line">export PATH=&quot;$HOME/Tool/esp/xtensa-lx106-elf/bin:$PATH&quot;</span><br><span class="line">export IDF_PATH=&quot;$HOME/Tool/esp/ESP8266_RTOS_SDK&quot;</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">get_esp8266_rtos</span><br><span class="line">sudo apt install python-pip</span><br><span class="line">python -m pip install --user -r $IDF_PATH/requirements.txt</span><br></pre></td></tr></table></figure><p>此后，只需执行以下命令便能加载其环境了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">get_esp8266_rtos</span><br></pre></td></tr></table></figure><h2 id="ESP8266-NONOS-SDK"><a href="#ESP8266-NONOS-SDK" class="headerlink" title="ESP8266_NONOS_SDK"></a>ESP8266_NONOS_SDK</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python python-serial</span><br><span class="line">mkdir -p ~/Tool/esp</span><br><span class="line">cd ~/Tool/esp</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz # 64位机</span><br><span class="line">wget https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-i686.tar.gz # 32位机</span><br><span class="line">tar -xzf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz # 64位机</span><br><span class="line">tar -xzf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-i686.tar.gz # 32位机</span><br><span class="line">git clone --recursive https://github.com/espressif/ESP8266_NONOS_SDK.git</span><br><span class="line">sudo vim  ~/.bashrc</span><br></pre></td></tr></table></figure><p>在 vim 中补充以下命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">alias get_esp8266_nonos=&#x27;</span><br><span class="line">export PATH=&quot;$HOME/Tool/esp/xtensa-lx106-elf/bin:$PATH&quot;</span><br><span class="line">export IDF_PATH=&quot;$HOME/Tool/esp/ESP8266_NONOS_SDK&quot;</span><br><span class="line">&#x27;</span><br></pre></td></tr></table></figure><p>此后，只需执行以下命令便能加载其环境了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br><span class="line">get_esp8266_nonos</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建环境 </tag>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> esp </tag>
            
            <tag> esp8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AT24CXX系列读写算法</title>
      <link href="/2021/05/15/AT24CXX%E7%B3%BB%E5%88%97%E8%AF%BB%E5%86%99%E7%AE%97%E6%B3%95/"/>
      <url>/2021/05/15/AT24CXX%E7%B3%BB%E5%88%97%E8%AF%BB%E5%86%99%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="AT24CXX容量"><a href="#AT24CXX容量" class="headerlink" title="AT24CXX容量"></a>AT24CXX容量</h2><p>​AT24C01，AT24C02，AT24C04，AT24C08，AT24C16，AT24C32，AT24C64，AT24C128，AT24C256…不同的xxx代表不同的容量。</p><table><thead><tr><th align="center">型号</th><th align="center">bit容量</th><th align="center">Byte容量</th></tr></thead><tbody><tr><td align="center">AT24C01</td><td align="center">1Kbit</td><td align="center">128Byte</td></tr><tr><td align="center">AT24C02</td><td align="center">2Kbit</td><td align="center">256Byte</td></tr><tr><td align="center">AT24C04</td><td align="center">4Kbit</td><td align="center">512Byte</td></tr><tr><td align="center">AT24C08</td><td align="center">8Kbit</td><td align="center">1024Byte</td></tr><tr><td align="center">AT24C16</td><td align="center">16Kbit</td><td align="center">2048Byte</td></tr><tr><td align="center">AT24C32</td><td align="center">32Kbit</td><td align="center">4096Byte</td></tr><tr><td align="center">AT24C64</td><td align="center">64Kbit</td><td align="center">8192Byte</td></tr><tr><td align="center">AT24C128</td><td align="center">128Kbit</td><td align="center">16384Byte</td></tr><tr><td align="center">AT24C256</td><td align="center">256Kbit</td><td align="center">32768Byte</td></tr><tr><td align="center">AT24C512</td><td align="center">512Kbit</td><td align="center">65536Byte</td></tr><tr><td align="center">AT24C1024</td><td align="center">1024Kbit</td><td align="center">131072Byte</td></tr></tbody></table><h2 id="AT24CXX页与页内单元"><a href="#AT24CXX页与页内单元" class="headerlink" title="AT24CXX页与页内单元"></a>AT24CXX页与页内单元</h2><p>​总容量(Byte容量) &#x3D; 页数 × 页内字节单元数。</p><table><thead><tr><th align="center">AT24CXXX</th><th align="center">Byte容量</th><th align="center">页数</th><th align="center">页内字节单元数</th></tr></thead><tbody><tr><td align="center">AT24C01</td><td align="center">128Byte</td><td align="center">16页</td><td align="center">8Byte</td></tr><tr><td align="center">AT24C02</td><td align="center">256Byte</td><td align="center">32页</td><td align="center">8Byte</td></tr><tr><td align="center">AT24C04</td><td align="center">512Byte</td><td align="center">32页</td><td align="center">16Byte</td></tr><tr><td align="center">AT24C08</td><td align="center">1024Byte</td><td align="center">64页</td><td align="center">16Byte</td></tr><tr><td align="center">AT24C16</td><td align="center">2048Byte</td><td align="center">128页</td><td align="center">16Byte</td></tr><tr><td align="center">AT24C32</td><td align="center">4096Byte</td><td align="center">128页</td><td align="center">32Byte</td></tr><tr><td align="center">AT24C64</td><td align="center">8192Byte</td><td align="center">256页</td><td align="center">32Byte</td></tr><tr><td align="center">AT24C128</td><td align="center">16384Byte</td><td align="center">256页</td><td align="center">64Byte</td></tr><tr><td align="center">AT24C256</td><td align="center">32768Byte</td><td align="center">512页</td><td align="center">64Byte</td></tr><tr><td align="center">AT24C512</td><td align="center">65536Byte</td><td align="center">512页</td><td align="center">128Byte</td></tr><tr><td align="center">AT24C1024</td><td align="center">131072Byte</td><td align="center">512页</td><td align="center">256Byte</td></tr></tbody></table><h2 id="AT24CXX寻址方式"><a href="#AT24CXX寻址方式" class="headerlink" title="AT24CXX寻址方式"></a>AT24CXX寻址方式</h2><blockquote><p>不是IIC地址，是存储器内部寻址</p></blockquote><p>​对AT24CXXX进行读写操作时，都得先访问存储地址、比如AT24C01写一个字节的IIC时序：</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515212712435.png" alt="image-20210515212712435"></p><p>​先发送设备地址，收到应答后再发送需要写数据的地址(<strong>WORD ADDRESS</strong>)。AT24C01容量为128Byte则<strong>WORD ADDRESS</strong>只需要7bit就可以覆盖128Byte的数据地址。通俗的讲就是128Byte就占用了128个地址，一个7bit的数据范围为(0-127)刚好128，所以128Byte的字节地址需要一个7bit的数据来表示。<br>AT24CXXX 字节地址如下(*表示无效位):</p><table><thead><tr><th align="center">AT24CXXX</th><th align="center">页数</th><th align="center">页内字节单元数</th><th align="center">容量(Byte)</th><th align="center">WORD ADDRESS(占用bit数)</th><th align="center">WORD ADDRESS</th></tr></thead><tbody><tr><td align="center">AT24C01</td><td align="center">16页</td><td align="center">8Byte</td><td align="center">128Byte</td><td align="center">7bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223134590.png" alt="image-20210515223134590"></td></tr><tr><td align="center">AT24C02</td><td align="center">32页</td><td align="center">8Byte</td><td align="center">256Byte</td><td align="center">8bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223108768.png" alt="image-20210515223108768"></td></tr><tr><td align="center">AT24C04</td><td align="center">32页</td><td align="center">16Byte</td><td align="center">512Byte</td><td align="center">9bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222957329.png" alt="image-20210515222957329"></td></tr><tr><td align="center">AT24C08</td><td align="center">64页</td><td align="center">16Byte</td><td align="center">1024Byte</td><td align="center">10bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222919062.png" alt="image-20210515222919062"></td></tr><tr><td align="center">AT24C16</td><td align="center">128页</td><td align="center">16Byte</td><td align="center">2048Byte</td><td align="center">11bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222847226.png" alt="image-20210515222847226"></td></tr><tr><td align="center">AT24C32</td><td align="center">128页</td><td align="center">32Byte</td><td align="center">4096Byte</td><td align="center">12bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222744553.png" alt="image-20210515222744553"></td></tr><tr><td align="center">AT24C64</td><td align="center">256页</td><td align="center">32Byte</td><td align="center">8192Byte</td><td align="center">13bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222708886.png" alt="image-20210515222708886"></td></tr><tr><td align="center">AT24C128</td><td align="center">256页</td><td align="center">64Byte</td><td align="center">16384Byte</td><td align="center">14bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222504947.png" alt="image-20210515222504947"></td></tr><tr><td align="center">AT24C256</td><td align="center">512页</td><td align="center">64Byte</td><td align="center">32768Byte</td><td align="center">15bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222424735.png" alt="image-20210515222424735"></td></tr><tr><td align="center">AT24C512</td><td align="center">512页</td><td align="center">128Byte</td><td align="center">65536Byte</td><td align="center">16bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222327337.png" alt="image-20210515222327337"></td></tr><tr><td align="center">AT24C1024</td><td align="center">512页</td><td align="center">256Byte</td><td align="center">131072Byte</td><td align="center">17bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222037349.png" alt="image-20210515222037349"></td></tr></tbody></table><h2 id="AT24CXX页地址与页内单元地址"><a href="#AT24CXX页地址与页内单元地址" class="headerlink" title="AT24CXX页地址与页内单元地址"></a>AT24CXX页地址与页内单元地址</h2><p>​比如AT24C256有512页每页64个字节，15bit的地址数据对其寻址，低6bit(D5-D0)为页内字节单元地址，高9bit(D14-D6)为页地址。</p><p>​如第16页开始写，则<strong>WORD ADDRESS</strong> &#x3D; 0x0400（000 0100 0000 0000)<br>​<strong>0</strong>：地址无效位<br>​<strong>000 0100 00</strong>：9位页地址<br>​<strong>00 0000</strong>：6位页内字节单元地址</p><p>页地址与页内偏移地址的关系如下图。</p><table><thead><tr><th align="center">AT24CXXX</th><th align="center">页数</th><th align="center">页内字节单元数</th><th align="center">容量(Byte)</th><th align="center">WORD ADDRESS(占用bit数)</th><th align="center">页地址|页内偏移地址</th></tr></thead><tbody><tr><td align="center">AT24C01</td><td align="center">16页</td><td align="center">8Byte</td><td align="center">128Byte</td><td align="center">7bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223134590.png" alt="image-20210515223134590"></td></tr><tr><td align="center">AT24C02</td><td align="center">32页</td><td align="center">8Byte</td><td align="center">256Byte</td><td align="center">8bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223108768.png" alt="image-20210515223108768"></td></tr><tr><td align="center">AT24C04</td><td align="center">32页</td><td align="center">16Byte</td><td align="center">512Byte</td><td align="center">9bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222957329.png" alt="image-20210515222957329"></td></tr><tr><td align="center">AT24C08</td><td align="center">64页</td><td align="center">16Byte</td><td align="center">1024Byte</td><td align="center">10bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222919062.png" alt="image-20210515222919062"></td></tr><tr><td align="center">AT24C16</td><td align="center">128页</td><td align="center">16Byte</td><td align="center">2048Byte</td><td align="center">11bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222847226.png" alt="image-20210515222847226"></td></tr><tr><td align="center">AT24C32</td><td align="center">128页</td><td align="center">32Byte</td><td align="center">4096Byte</td><td align="center">12bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222744553.png" alt="image-20210515222744553"></td></tr><tr><td align="center">AT24C64</td><td align="center">256页</td><td align="center">32Byte</td><td align="center">8192Byte</td><td align="center">13bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222708886.png" alt="image-20210515222708886"></td></tr><tr><td align="center">AT24C128</td><td align="center">256页</td><td align="center">64Byte</td><td align="center">16384Byte</td><td align="center">14bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222504947.png" alt="image-20210515222504947"></td></tr><tr><td align="center">AT24C256</td><td align="center">512页</td><td align="center">64Byte</td><td align="center">32768Byte</td><td align="center">15bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222424735.png" alt="image-20210515222424735"></td></tr><tr><td align="center">AT24C512</td><td align="center">512页</td><td align="center">128Byte</td><td align="center">65536Byte</td><td align="center">16bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222327337.png" alt="image-20210515222327337"></td></tr><tr><td align="center">AT24C1024</td><td align="center">512页</td><td align="center">256Byte</td><td align="center">131072Byte</td><td align="center">17bit</td><td align="center"><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515222037349.png" alt="image-20210515222037349"></td></tr></tbody></table><p>比如：</p><p>​<strong>AT24C01</strong>：</p><p>​16页：需要4bit寻址(2^4&#x3D;16)。</p><p>​8Byte：需要3bit寻址(2^3&#x3D;8)。</p><p>查看手册</p><p>​<strong>AT24C01</strong>字节寻址需一个7bit地址：</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223533498.png" alt="image-20210515223533498"></p><p>​<strong>AT24C128</strong>字节寻址需一个14bit地址：</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223654431.png" alt="image-20210515223654431"></p><p>​<strong>AT24C256</strong>字节寻址需一个15bit地址：</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515223815200.png" alt="image-20210515223815200"></p><p>​以此类推，其实就是上面总结的那张表。</p><h2 id="AT24CXX-IIC地址"><a href="#AT24CXX-IIC地址" class="headerlink" title="AT24CXX IIC地址"></a>AT24CXX IIC地址</h2><p>​IIC通信需要先向从设备发送设备地址，AT24CXX芯片上有A2、A1、A0引脚，通过这三个引脚我们就可以自定义AT24CXX芯片的通信地址。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515224030810.png" alt="image-20210515224030810"></p><p>​地址构成如下(手册上都会有写)，比如A2、A1、A0接地，则IIC写地址为1010 0000（0xA0），读地址为1010 0001（0xA1）。当然，地址详情还是需要根据<strong>Datasheet</strong>来进行判断。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515224250520.png" alt="image-20210515224250520"></p><h2 id="AT24CXX-数据的读写"><a href="#AT24CXX-数据的读写" class="headerlink" title="AT24CXX 数据的读写"></a>AT24CXX 数据的读写</h2><h3 id="按字节写"><a href="#按字节写" class="headerlink" title="按字节写"></a>按字节写</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515212712435.png" alt="image-20210515212712435"></p><h3 id="按页写"><a href="#按页写" class="headerlink" title="按页写"></a>按页写</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515224836911.png" alt="image-20210515224836911"></p><p>​示例：<br>​<img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515225034409.png" alt="image-20210515225034409"></p><p>​内容为：给<strong>AT24C04</strong>的最后的两个字节里面写入<strong>0x54</strong>和<strong>0x53</strong>。</p><hr><p>​注意：<br>  往AT24CXXX中写数据时，每写一个Byte的数据页内地址+1，当前页写满后会重新覆盖掉这一页前面的数据，而不会自动跳转到下一页，但是读会自动翻页。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515225558292.png" alt="image-20210515225558292"></p><h3 id="翻页写"><a href="#翻页写" class="headerlink" title="翻页写"></a>翻页写</h3><p>​翻页写其实就是执行一次下面的时序，也就是发送一次从机设备和字节地址最大就可以写入64字节的数据，如果要连写多页，就重新按照以下时序发送从机地址和字节地址。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515225753490.png" alt="image-20210515225753490"></p><p>​即写满一页之后，还是需要手动翻页的，但是不需要重发<strong>Start</strong>和<strong>Stop</strong>了；</p><h3 id="按字节读"><a href="#按字节读" class="headerlink" title="按字节读"></a>按字节读</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515230405346.png" alt="image-20210515230405346"></p><h3 id="顺序读"><a href="#顺序读" class="headerlink" title="顺序读"></a>顺序读</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515230416559.png" alt="image-20210515230416559"></p><h3 id="随机读"><a href="#随机读" class="headerlink" title="随机读"></a>随机读</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515230438061.png" alt="image-20210515230438061"></p><p>​示例：</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210515230935593.png" alt="image-20210515230935593"></p><p>内容为：读取<strong>AT24C04</strong>的最后的两个字节，内容为<strong>0x54</strong>和<strong>0x53</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 芯片驱动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> i2c </tag>
            
            <tag> 驱动 </tag>
            
            <tag> eeprom </tag>
            
            <tag> iic </tag>
            
            <tag> at24cxx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keil踩坑指南</title>
      <link href="/2021/05/11/Keil%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97/"/>
      <url>/2021/05/11/Keil%E8%B8%A9%E5%9D%91%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h2 id="Keil-Jlink闪退"><a href="#Keil-Jlink闪退" class="headerlink" title="Keil-Jlink闪退"></a>Keil-Jlink闪退</h2><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Jlink版本和Keil的版本都过高，且由于Jlink为盗版，导致闪退。</p><p>具体为<strong>JLinkARM.dll</strong>这个插件搞鬼。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/204450uuy2lquzqy2ysiuq.png" alt="204450uuy2lquzqy2ysiuq"></p><p>这个插件的来源为</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/2101134fursl3bf4fbzavf.png" alt="2101134fursl3bf4fbzavf"></p><p>也就是我们装Jlink驱动的时候，勾选了这个选项，而导致这个毒瘤插件进入Keil，以后安装插件的时候取消安装就可以了。</p><h3 id="解决措施"><a href="#解决措施" class="headerlink" title="解决措施"></a>解决措施</h3><ol><li><p>找到”Keil安装目录“\ARM\Segger</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511164245801.png" alt="image-20210511164245801"></p></li><li><p>下载老版Keil的驱动：<a href="https://xqyjlj.lanzoui.com/b0axo4dte">https://xqyjlj.lanzoui.com/b0axo4dte</a> ；密码:g1h7</p></li><li><p>将里面的驱动解压替换现在的驱动，重启Keil就可以解决了。</p></li></ol><h2 id="Cannot-load-driver-‘C-Keil-v5-ARM-Segger-JL2CM3-dll"><a href="#Cannot-load-driver-‘C-Keil-v5-ARM-Segger-JL2CM3-dll" class="headerlink" title="Cannot load driver ‘C:\Keil_v5\ARM\Segger\JL2CM3.dll"></a>Cannot load driver ‘C:\Keil_v5\ARM\Segger\JL2CM3.dll</h2><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511171003731.png" alt="image-20210511171003731"></p><h3 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h3><p>Jlink版本和Keil的版本都过高，且由于Jlink为盗版，导致闪退。</p><p>具体为<strong>JLinkARM.dll</strong>这个插件搞鬼。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/204450uuy2lquzqy2ysiuq.png" alt="204450uuy2lquzqy2ysiuq"></p><p>这个插件的来源为</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/2101134fursl3bf4fbzavf.png" alt="2101134fursl3bf4fbzavf"></p><p>也就是我们装Jlink驱动的时候，勾选了这个选项，而导致这个毒瘤插件进入Keil，以后安装插件的时候取消安装就可以了。</p><h3 id="解决措施-1"><a href="#解决措施-1" class="headerlink" title="解决措施"></a>解决措施</h3><ol><li><p>找到”Keil安装目录“\ARM\Segger</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511164245801.png" alt="image-20210511164245801"></p></li><li><p>下载老版Keil的驱动：<a href="https://xqyjlj.lanzoui.com/b0axo4dte">https://xqyjlj.lanzoui.com/b0axo4dte</a> ；密码:g1h7</p></li><li><p>将里面的驱动解压替换现在的驱动，重启Keil就可以解决了。</p></li></ol><h2 id="Keil-使用-Astyle-自动格式化"><a href="#Keil-使用-Astyle-自动格式化" class="headerlink" title="Keil 使用 Astyle 自动格式化"></a>Keil 使用 Astyle 自动格式化</h2><h3 id="关于Astyle"><a href="#关于Astyle" class="headerlink" title="关于Astyle"></a>关于Astyle</h3><p>Astyle 的全称是Artistic Style的简称，是一个开源的源代码格式化工具，可以对C，C++，C#以及Java等编程语言的源代码进行缩进、格式化、美化。</p><p><strong>Home Page</strong>: <a href="http://astyle.sourceforge.net/">http://astyle.sourceforge.net/</a><br><strong>Project Page</strong>: <a href="http://sourceforge.net/projects/astyle/">http://sourceforge.net/projects/astyle/</a></p><h3 id="Astyle下载"><a href="#Astyle下载" class="headerlink" title="Astyle下载"></a>Astyle下载</h3><p><a href="https://sourceforge.net/projects/astyle/">https://sourceforge.net/projects/astyle/</a></p><p><a href="https://xqyjlj.lanzoui.com/b0axo50yh">https://xqyjlj.lanzoui.com/b0axo50yh</a> 密码:69tj</p><p>下载之后解压，推荐解压到Keil的安装目录，避免误删除。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511200057051.png" alt="image-20210511200057051"></p><h3 id="创建菜单按钮"><a href="#创建菜单按钮" class="headerlink" title="创建菜单按钮"></a>创建菜单按钮</h3><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511195813214.png" alt="image-20210511195813214"></p><ol><li><p>创建应用 <strong>Astyle All</strong></p></li><li><p>选择<strong>Astyle</strong>路径</p></li><li><p>添加参数</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;$E*.c&quot; &quot;$E*.h&quot; --style=allman --indent=spaces=4 --indent-preproc-block --pad-header --pad-oper --unpad-paren --suffix=none --lineend=linux --convert-tabs --align-pointer=type --verbose</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&quot;$E*.c&quot; &quot;$E*.h&quot; ##当前目录下所有的.c .h文件</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--style=allman </span><br><span class="line">--indent=spaces=4 </span><br><span class="line">--indent-preproc-block </span><br><span class="line">--pad-header </span><br><span class="line">--pad-oper </span><br><span class="line">--unpad-paren </span><br><span class="line">--suffix=none </span><br><span class="line">--lineend=linux </span><br><span class="line">--convert-tabs </span><br><span class="line">--align-pointer=type </span><br><span class="line">--verbose</span><br></pre></td></tr></table></figure><p>此为Astyle命令，具体含义请移步 <a href="http://astyle.sourceforge.net/astyle.html">http://astyle.sourceforge.net/astyle.html</a></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511202934229.png" alt="image-20210511202934229"></p></li><li><p>按下OK后，tool下就有以下按钮</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511202956867.png" alt="image-20210511202956867"></p></li><li><p>按下按钮之后，启动自动格式化（需要先保存文件）。</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511203057315.png" alt="image-20210511203057315"></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511203144916.png" alt="image-20210511203144916"></p></li><li><p>再增加一个应用<strong>Astyle Current</strong></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!E --style=allman --indent=spaces=4 --indent-preproc-block --pad-header --pad-oper --unpad-paren --suffix=none --lineend=linux --convert-tabs --align-pointer=type --verbose</span><br></pre></td></tr></table></figure><p>其中</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!E    ##当前文件</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">--style=allman </span><br><span class="line">--indent=spaces=4 </span><br><span class="line">--indent-preproc-block </span><br><span class="line">--pad-header </span><br><span class="line">--pad-oper </span><br><span class="line">--unpad-paren </span><br><span class="line">--suffix=none </span><br><span class="line">--lineend=linux </span><br><span class="line">--convert-tabs </span><br><span class="line">--align-pointer=type </span><br><span class="line">--verbose</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511203208095.png" alt="image-20210511203208095"></p></li></ol><h2 id="Keil字体"><a href="#Keil字体" class="headerlink" title="Keil字体"></a>Keil字体</h2><p>   Keil默认字体本身不怎么好看。本人提供一些字体供大家下载。首选<strong>JetBrains Mono</strong>吧。<strong>Consolas YaHei hybrid</strong>要改设置，比较繁琐。</p><h3 id="JetBrains-Mono"><a href="#JetBrains-Mono" class="headerlink" title="JetBrains Mono"></a>JetBrains Mono</h3><ul><li><p>字体地址 ：<a href="https://www.jetbrains.com/lp/mono/">https://www.jetbrains.com/lp/mono/</a></p></li><li><p>安装方式</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511205514357.png" alt="image-20210511205514357"></p></li><li><p>字体预览</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511204632463.png" alt="image-20210511204632463"></p></li><li><p>下载地址</p><ul><li><a href="https://download.jetbrains.com/fonts/JetBrainsMono-2.225.zip?_ga=2.243489413.18516330.1620736840-1147192159.1615307884">https://download.jetbrains.com/fonts/JetBrainsMono-2.225.zip?_ga=2.243489413.18516330.1620736840-1147192159.1615307884</a></li><li><a href="https://xqyjlj.lanzoui.com/b0axo56va">https://xqyjlj.lanzoui.com/b0axo56va</a> 密码:38vm</li></ul></li></ul><h3 id="Consolas-YaHei-hybrid"><a href="#Consolas-YaHei-hybrid" class="headerlink" title="Consolas YaHei hybrid"></a>Consolas YaHei hybrid</h3><ul><li><p>安装方式</p><ul><li><p>打开Keil安装目录下的uv4文件夹，找到<strong>global.prop</strong>文件</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511205945676.png" alt="image-20210511205945676"></p></li><li><p>将font属性修改为<strong>Consolas YaHei hybrid</strong></p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511210310839.png" alt="image-20210511210310839"></p></li></ul></li><li><p>字体预览</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511210347828.png" alt="image-20210511210347828"></p></li><li><p>下载地址： <a href="https://xqyjlj.lanzoui.com/b0axo56va">https://xqyjlj.lanzoui.com/b0axo56va</a> 密码:38vm</p></li></ul><h2 id="Keil设置"><a href="#Keil设置" class="headerlink" title="Keil设置"></a>Keil设置</h2><ul><li><p>编码：首选<strong>UTF-8</strong> （较高版本才会有）</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511210651302.png" alt="image-20210511210651302"></p></li><li><p>Tab大小：4</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511210741741.png" alt="image-20210511210741741"></p></li><li><p>自动补全</p><p><img src="https://raw.githubusercontent.com/xqyjlj/xqyjlj.github.io/img/image-20210511210821032.png" alt="image-20210511210821032"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 踩坑指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
            <tag> 工具 </tag>
            
            <tag> keil </tag>
            
            <tag> jlink </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
